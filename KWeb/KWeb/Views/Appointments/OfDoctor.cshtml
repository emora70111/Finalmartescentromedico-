@model KWeb.ViewModels.AppointmentsOfDoctorViewModel


@{
    ViewData["Title"] = "Main";
    Layout = "~/Views/Shared/_Layout.cshtml";

}



@section Styles {
    @{
    }
}


<ul class="nav nav-tabs" id="calendarTab" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link active" id="calendar-tab" data-bs-toggle="tab" href="#calendar" role="tab" aria-controls="calendar" aria-selected="true">Agendados</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="table-tab" data-bs-toggle="tab" href="#table" role="tab" aria-controls="table" aria-selected="false">Para hoy</a>
    </li>
</ul>

<!-- Contenido de las pestañas -->
<div class="tab-content" id="calendarTabContent">
 
    <div class="tab-pane fade show active" id="calendar" role="tabpanel" aria-labelledby="calendar-tab">
        <div class="container mt-4">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-3 text-primary">Citas agendadas</h2>
            </div>

            <table class="table table-hover table-bordered mt-3">
                <thead>
                    <tr>
                        <th>Paciente</th>
                        <th>Horario cita</th>
                        <th>Estado</th>
                        <th>Motivo</th>

                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.AppointmentsScheduled.Count() == 0)
                    {
                        <tr class="no-data">
                            <td colspan="5">Registro vacio</td>
                        </tr>
                    }

                    @foreach (var appointment in Model.AppointmentsScheduled)
                    {
                        <tr>
                            <td>@appointment.Patients.Users.FirstName</td>
                            <td>@appointment.Date.ToString("yyyy-MM-dd") @appointment.Blocks.BlockStartTime - @appointment.Blocks.BlockEndTime</td>
                            <td>
                                @if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Completed))
                                {
                                    <span class="badge text-white " style="background-color: var(--primary-color);">Completado</span>
                                }
                                else if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Canceled))
                                {
                                    <span class="badge badge-danger">Cancelado</span>
                                }
                                else if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Scheduled))
                                {
                                    <span class="badge badge-secondary">Agendado</span>
                                }
                                else
                                {
                                    <span class="badge bg-dark">Desconocido</span>
                                }
                            </td>

                            <td>@appointment.Notes</td>

                            <td>
                                @if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Canceled))
                                {
                                    <span class="text-danger">Cancelada</span>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-danger"
                                            data-toggle="modal"
                                            data-target="#cancelAppointmentModal_@appointment.AppointmentID">
                                        Cancelar cita
                                    </button>
                                }
                            </td>
                        </tr>
                        Html.RenderPartial("Partials/_CancelAppointmentModal", appointment);



                    }
                </tbody>
            </table>
        </div>
    </div>

 
    <div class="tab-pane fade" id="table" role="tabpanel" aria-labelledby="table-tab">

        <div class="container mt-4">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-3 text-primary">Citas hoy</h2>
            </div>

            <table class="table table-hover table-bordered mt-3">
                <thead>
                    <tr>
                        <th>Paciente</th>
                        <th>Horario cita</th>
                        <th>Estado</th>
                        <th>Motivo</th>

                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.AppointmentsToday.Count() == 0)
                    {
                        <tr class="no-data">
                            <td colspan="5">Registro vacio</td>
                        </tr>
                    }

                    @foreach (var appointment in Model.AppointmentsToday)
                    {
                        <tr>
                            <td>@appointment.Patients.Users.FirstName</td>
                            <td>@appointment.Blocks.BlockStartTime - @appointment.Blocks.BlockEndTime</td>
                            <td>
                                @if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Completed))
                                {
                                    <span class="badge text-white " style="background-color: var(--primary-color);">Completado</span>
                                }
                                else if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Canceled))
                                {
                                    <span class="badge badge-danger">Cancelado</span>
                                }
                                else if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Scheduled))
                                {
                                    <span class="badge badge-secondary">Agendado</span>
                                }
                                else
                                {
                                    <span class="badge bg-dark">Desconocido</span>
                                }
                            </td>

                            <td>@appointment.Notes</td>

                            <td>
                                @if (appointment.Status == Enum.GetName(typeof(KWeb.Utils.AppointmentsStatusEnum), KWeb.Utils.AppointmentsStatusEnum.Completed))
                                {
                                    <span class="text-primary">
                                        Atendido <i class="fa fa-check"></i>
                                    </span>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-primary"
                                            data-toggle="modal"
                                            data-target="#attendAppointmentModal_@appointment.AppointmentID">
                                        Atender cita
                                    </button>
                                }
                            </td>
                        </tr>
                        Html.RenderPartial("Partials/_AttendAppointmentModal", appointment);



                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



@section Scripts {
    @*Tags Calendario | Tabla*@

    <script>
         const calendarTab = document.getElementById('calendar-tab');
         const tableTab = document.getElementById('table-tab');
         const calendarContent = document.getElementById('calendar');
         const tableContent = document.getElementById('table');

         function showTab(tab) {
             // Eliminar la clase 'active' de todas las pestañas y contenido
             document.querySelectorAll('.nav-link').forEach(link => link.classList.remove('active'));
             document.querySelectorAll('.tab-pane').forEach(pane => pane.classList.remove('show', 'active'));

             // Añadir la clase 'active' a la pestaña seleccionada y al contenido correspondiente
             tab.classList.add('active');
             const targetContent = document.querySelector(tab.getAttribute('href'));
             targetContent.classList.add('show', 'active');
         }

         // Evento para cambiar a la pestaña de calendario
         calendarTab.addEventListener('click', function (event) {
             event.preventDefault(); // Prevenir el comportamiento por defecto de Bootstrap
             showTab(calendarTab);

             // Inicializar el calendario solo si no está inicializado
             if (calendarContent.innerHTML === '') {
                 // Usar FullCalendar solo si el calendario está vacío
                 new FullCalendar.Calendar(calendarContent, {
                     initialView: 'dayGridMonth',
                     events: []  // Aquí puedes cargar los eventos si los tienes
                 }).render();
             }
         });

         // Evento para cambiar a la pestaña de tabla
         tableTab.addEventListener('click', function (event) {
             event.preventDefault(); // Prevenir el comportamiento por defecto de Bootstrap
             showTab(tableTab);
         });

    </script>
}
